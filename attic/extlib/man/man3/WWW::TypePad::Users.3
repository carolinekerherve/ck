.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "WWW::TypePad::Users 3"
.TH WWW::TypePad::Users 3 "2011-03-24" "perl v5.19.3" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
WWW::TypePad::Users \- Users API methods
.SH "METHODS"
.IX Header "METHODS"
.IP "get" 4
.IX Item "get"
.Vb 1
\&  my $res = $tp\->users\->get($id);
.Ve
.Sp
Get basic information about the selected user.
.Sp
Returns User which contains following properties.
.RS 4
.IP "displayName" 8
.IX Item "displayName"
(string) The user's chosen display name.
.IP "location" 8
.IX Item "location"
(string) B<Deprecated> The user's location, as a free-form string provided by them. Use the the M<location> property of the related O<UserProfile> object, which can be retrieved from the N</users/{id}/profile> endpoint.
.IP "interests" 8
.IX Item "interests"
(array<string>) B<Deprecated> A list of interests provided by the user and displayed on the user's profile page. Use the M<interests> property of the O<UserProfile> object, which can be retrieved from the N</users/{id}/profile> endpoint.
.IP "preferredUsername" 8
.IX Item "preferredUsername"
(string) The name the user has chosen for use in the \s-1URL\s0 of their TypePad profile page. This property can be used to select this user in URLs, although it is not a persistent key, as the user can change it at any time.
.IP "avatarLink" 8
.IX Item "avatarLink"
(ImageLink) A link to an image representing this user.
.IP "profilePageUrl" 8
.IX Item "profilePageUrl"
(string) The \s-1URL\s0 of the user's TypePad profile page.
.IP "objectTypes" 8
.IX Item "objectTypes"
(set<string>) B<Deprecated> An array of object type identifier URIs.
.IP "objectType" 8
.IX Item "objectType"
(string) The keyword identifying the type of object this is. For a User object, M<objectType> will be C<User>.
.IP "email" 8
.IX Item "email"
(string) B<Deprecated> The user's email address. This property is only provided for authenticated requests if the user has shared it with the authenticated application, and the authenticated user is allowed to view it (as with administrators of groups the user has joined). In all other cases, this property is omitted.
.IP "gender" 8
.IX Item "gender"
(string) B<Deprecated> The user's gender, as they provided it. This property is only provided for authenticated requests if the user has shared it with the authenticated application, and the authenticated user is allowed to view it (as with administrators of groups the user has joined). In all other cases, this property is omitted.
.IP "id" 8
.IX Item "id"
(string) A \s-1URI\s0 that serves as a globally unique identifier for the object.
.IP "urlId" 8
.IX Item "urlId"
(string) A string containing the canonical identifier that can be used to identify this object in URLs. This can be used to recognise where the same user is returned in response to different requests, and as a mapping key for an application's local data store.
.RE
.RS 4
.RE
.IP "get_badges" 4
.IX Item "get_badges"
.Vb 1
\&  my $res = $tp\->users\->get_badges($id);
.Ve
.Sp
Get a list of badges that the selected user has won.
.Sp
Returns List<UserBadge> which contains following properties.
.RS 4
.IP "totalResults" 8
.IX Item "totalResults"
(integer) The total number of items in the whole list of which this list object is a paginated view.
.IP "entries" 8
.IX Item "entries"
(array<UserBadge>) The items within the selected slice of the list.
.RE
.RS 4
.RE
.IP "get_learning_badges" 4
.IX Item "get_learning_badges"
.Vb 1
\&  my $res = $tp\->users\->get_learning_badges($id);
.Ve
.Sp
Get a list of learning badges that the selected user has won.
.Sp
Returns List<UserBadge> which contains following properties.
.RS 4
.IP "totalResults" 8
.IX Item "totalResults"
(integer) The total number of items in the whole list of which this list object is a paginated view.
.IP "entries" 8
.IX Item "entries"
(array<UserBadge>) The items within the selected slice of the list.
.RE
.RS 4
.RE
.IP "get_public_badges" 4
.IX Item "get_public_badges"
.Vb 1
\&  my $res = $tp\->users\->get_public_badges($id);
.Ve
.Sp
Get a list of public badges that the selected user has won.
.Sp
Returns List<UserBadge> which contains following properties.
.RS 4
.IP "totalResults" 8
.IX Item "totalResults"
(integer) The total number of items in the whole list of which this list object is a paginated view.
.IP "entries" 8
.IX Item "entries"
(array<UserBadge>) The items within the selected slice of the list.
.RE
.RS 4
.RE
.IP "get_blogs" 4
.IX Item "get_blogs"
.Vb 1
\&  my $res = $tp\->users\->get_blogs($id);
.Ve
.Sp
Get a list of blogs that the selected user has access to.
.Sp
Returns List<Blog> which contains following properties.
.RS 4
.IP "totalResults" 8
.IX Item "totalResults"
(integer) The total number of items in the whole list of which this list object is a paginated view.
.IP "entries" 8
.IX Item "entries"
(array<Blog>) The items within the selected slice of the list.
.RE
.RS 4
.RE
.IP "get_elsewhere_accounts" 4
.IX Item "get_elsewhere_accounts"
.Vb 1
\&  my $res = $tp\->users\->get_elsewhere_accounts($id);
.Ve
.Sp
Get a list of elsewhere accounts for the selected user.
.Sp
Returns List<Account> which contains following properties.
.RS 4
.IP "totalResults" 8
.IX Item "totalResults"
(integer) The total number of items in the whole list of which this list object is a paginated view.
.IP "entries" 8
.IX Item "entries"
(array<Account>) The items within the selected slice of the list.
.RE
.RS 4
.RE
.IP "get_events" 4
.IX Item "get_events"
.Vb 1
\&  my $res = $tp\->users\->get_events($id);
.Ve
.Sp
Get a list of events describing actions that the selected user performed.
.Sp
Returns Stream<Event> which contains following properties.
.RS 4
.IP "totalResults" 8
.IX Item "totalResults"
(integer) The total number of items in the whole stream of which this response contains a subset. C<null> if an exact count cannot be determined.
.IP "estimatedTotalResults" 8
.IX Item "estimatedTotalResults"
(integer) An estimate of the total number of items in the whole list of which this response contains a subset. C<null> if a count cannot be determined at all, or if an exact count is returned in C<totalResults>.
.IP "moreResultsToken" 8
.IX Item "moreResultsToken"
(string) An opaque token that can be used as the C<start\-token> parameter of a followup request to retrieve additional results. C<null> if there are no more results to retrieve, but the presence of this token does not guarantee that the response to a followup request will actually contain results.
.IP "entries" 8
.IX Item "entries"
(array<Event>) A selection of items from the underlying stream.
.RE
.RS 4
.RE
.IP "get_events_by_group" 4
.IX Item "get_events_by_group"
.Vb 1
\&  my $res = $tp\->users\->get_events_by_group($id, $groupId);
.Ve
.Sp
Get a list of events describing actions that the selected user performed in a particular group.
.Sp
Returns List<Event> which contains following properties.
.RS 4
.IP "totalResults" 8
.IX Item "totalResults"
(integer) The total number of items in the whole list of which this list object is a paginated view.
.IP "entries" 8
.IX Item "entries"
(array<Event>) The items within the selected slice of the list.
.RE
.RS 4
.RE
.IP "post_to_favorites" 4
.IX Item "post_to_favorites"
.Vb 1
\&  my $res = $tp\->users\->post_to_favorites($id);
.Ve
.Sp
Create a new favorite in the selected user's list of favorites.
.Sp
Returns Favorite which contains following properties.
.RS 4
.IP "id" 8
.IX Item "id"
(string) A \s-1URI\s0 that serves as a globally unique identifier for the favorite.
.IP "urlId" 8
.IX Item "urlId"
(string) A string containing the canonical identifier that can be used to identify this favorite in URLs. This can be used to recognise where the same favorite is returned in response to different requests, and as a mapping key for an application's local data store.
.IP "author" 8
.IX Item "author"
(User) The user who saved this favorite. That is, this property is the user who saved the target asset as a favorite, not the creator of that asset.
.IP "inReplyTo" 8
.IX Item "inReplyTo"
(AssetRef) A reference to the target asset that has been marked as a favorite.
.IP "published" 8
.IX Item "published"
(datetime) The time that the favorite was created, as a W3CDTF timestamp.
.RE
.RS 4
.RE
.IP "get_favorites" 4
.IX Item "get_favorites"
.Vb 1
\&  my $res = $tp\->users\->get_favorites($id);
.Ve
.Sp
Get a list of favorites that were listed by the selected user.
.Sp
Returns List<Favorite> which contains following properties.
.RS 4
.IP "totalResults" 8
.IX Item "totalResults"
(integer) The total number of items in the whole list of which this list object is a paginated view.
.IP "entries" 8
.IX Item "entries"
(array<Favorite>) The items within the selected slice of the list.
.RE
.RS 4
.RE
.IP "get_memberships" 4
.IX Item "get_memberships"
.Vb 1
\&  my $res = $tp\->users\->get_memberships($id);
.Ve
.Sp
Get a list of relationships that the selected user has with groups.
.Sp
Returns List<Relationship> which contains following properties.
.RS 4
.IP "totalResults" 8
.IX Item "totalResults"
(integer) The total number of items in the whole list of which this list object is a paginated view.
.IP "entries" 8
.IX Item "entries"
(array<Relationship>) The items within the selected slice of the list.
.RE
.RS 4
.RE
.IP "get_admin_memberships" 4
.IX Item "get_admin_memberships"
.Vb 1
\&  my $res = $tp\->users\->get_admin_memberships($id);
.Ve
.Sp
Get a list of relationships that have an Admin type that the selected user has with groups.
.Sp
Returns List<Relationship> which contains following properties.
.RS 4
.IP "totalResults" 8
.IX Item "totalResults"
(integer) The total number of items in the whole list of which this list object is a paginated view.
.IP "entries" 8
.IX Item "entries"
(array<Relationship>) The items within the selected slice of the list.
.RE
.RS 4
.RE
.IP "get_memberships_by_group" 4
.IX Item "get_memberships_by_group"
.Vb 1
\&  my $res = $tp\->users\->get_memberships_by_group($id, $groupId);
.Ve
.Sp
Get a list containing only the relationship between the selected user and a particular group, or an empty list if the user has no relationship with the group.
.Sp
Returns List<Relationship> which contains following properties.
.RS 4
.IP "totalResults" 8
.IX Item "totalResults"
(integer) The total number of items in the whole list of which this list object is a paginated view.
.IP "entries" 8
.IX Item "entries"
(array<Relationship>) The items within the selected slice of the list.
.RE
.RS 4
.RE
.IP "get_member_memberships" 4
.IX Item "get_member_memberships"
.Vb 1
\&  my $res = $tp\->users\->get_member_memberships($id);
.Ve
.Sp
Get a list of relationships that have a Member type that the selected user has with groups.
.Sp
Returns List<Relationship> which contains following properties.
.RS 4
.IP "totalResults" 8
.IX Item "totalResults"
(integer) The total number of items in the whole list of which this list object is a paginated view.
.IP "entries" 8
.IX Item "entries"
(array<Relationship>) The items within the selected slice of the list.
.RE
.RS 4
.RE
.IP "get_notifications" 4
.IX Item "get_notifications"
.Vb 1
\&  my $res = $tp\->users\->get_notifications($id);
.Ve
.Sp
Get a list of events describing actions by users that the selected user is following.
.Sp
Returns List<Event> which contains following properties.
.RS 4
.IP "totalResults" 8
.IX Item "totalResults"
(integer) The total number of items in the whole list of which this list object is a paginated view.
.IP "entries" 8
.IX Item "entries"
(array<Event>) The items within the selected slice of the list.
.RE
.RS 4
.RE
.IP "get_notifications_by_group" 4
.IX Item "get_notifications_by_group"
.Vb 1
\&  my $res = $tp\->users\->get_notifications_by_group($id, $groupId);
.Ve
.Sp
Get a list of events describing actions in a particular group by users that the selected user is following.
.Sp
Returns List<Event> which contains following properties.
.RS 4
.IP "totalResults" 8
.IX Item "totalResults"
(integer) The total number of items in the whole list of which this list object is a paginated view.
.IP "entries" 8
.IX Item "entries"
(array<Event>) The items within the selected slice of the list.
.RE
.RS 4
.RE
.IP "get_profile" 4
.IX Item "get_profile"
.Vb 1
\&  my $res = $tp\->users\->get_profile($id);
.Ve
.Sp
Get a more extensive set of user properties that can be used to build a user profile page.
.Sp
Returns UserProfile which contains following properties.
.RS 4
.IP "id" 8
.IX Item "id"
(string) The \s-1URI\s0 from the related O<User> object's M<id> property.
.IP "urlId" 8
.IX Item "urlId"
(string) The canonical identifier from the related O<User> object's M<urlId> property.
.IP "displayName" 8
.IX Item "displayName"
(string) The user's chosen display name.
.IP "location" 8
.IX Item "location"
(string) The user's location, as a free-form string they provided.
.IP "aboutMe" 8
.IX Item "aboutMe"
(string) The user's long description or biography, as a free-form string they provided.
.IP "interests" 8
.IX Item "interests"
(array<string>) A list of interests provided by the user and displayed on their profile page.
.IP "preferredUsername" 8
.IX Item "preferredUsername"
(string) The name the user has chosen for use in the \s-1URL\s0 of their TypePad profile page. This property can be used to select this user in URLs, although it is not a persistent key, as the user can change it at any time.
.IP "avatarLink" 8
.IX Item "avatarLink"
(ImageLink) A link to an image representing this user.
.IP "profilePageUrl" 8
.IX Item "profilePageUrl"
(string) The \s-1URL\s0 of the user's TypePad profile page.
.IP "followFrameContentUrl" 8
.IX Item "followFrameContentUrl"
(string) The \s-1URL\s0 of a widget that, when rendered in an C<iframe>, allows viewers to follow this user. Render this widget in an C<iframe> 300 pixels wide and 125 pixels high.
.IP "profileEditPageUrl" 8
.IX Item "profileEditPageUrl"
(string) The \s-1URL\s0 of a page where this user can edit their profile information. If this is not the authenticated user's UserProfile object, this property is omitted.
.IP "membershipManagementPageUrl" 8
.IX Item "membershipManagementPageUrl"
(string) The \s-1URL\s0 of a page where this user can manage their group memberships. If this is not the authenticated user's UserProfile object, this property is omitted.
.IP "homepageUrl" 8
.IX Item "homepageUrl"
(string) The address of the user's homepage, as a \s-1URL\s0 they provided. This property is omitted if the user has not provided a homepage.
.IP "email" 8
.IX Item "email"
(string) The user's email address. This property is only provided for authenticated requests if the user has shared it with the authenticated application, and the authenticated user is allowed to view it (as with administrators of groups the user has joined). In all other cases, this property is omitted.
.IP "gender" 8
.IX Item "gender"
(string) The user's gender, as they provided it. This property is only provided for authenticated requests if the user has shared it with the authenticated application, and the authenticated user is allowed to view it (as with administrators of groups the user has joined). In all other cases, this property is omitted.
.RE
.RS 4
.RE
.IP "get_relationships" 4
.IX Item "get_relationships"
.Vb 1
\&  my $res = $tp\->users\->get_relationships($id);
.Ve
.Sp
Get a list of relationships that the selected user has with other users, and that other users have with the selected user.
.Sp
Returns List<Relationship> which contains following properties.
.RS 4
.IP "totalResults" 8
.IX Item "totalResults"
(integer) The total number of items in the whole list of which this list object is a paginated view.
.IP "entries" 8
.IX Item "entries"
(array<Relationship>) The items within the selected slice of the list.
.RE
.RS 4
.RE
.IP "get_relationships_by_group" 4
.IX Item "get_relationships_by_group"
.Vb 1
\&  my $res = $tp\->users\->get_relationships_by_group($id, $groupId);
.Ve
.Sp
Get a list of relationships that the selected user has with other users, and that other users have with the selected user, constrained to members of a particular group.
.Sp
Returns List<Relationship> which contains following properties.
.RS 4
.IP "totalResults" 8
.IX Item "totalResults"
(integer) The total number of items in the whole list of which this list object is a paginated view.
.IP "entries" 8
.IX Item "entries"
(array<Relationship>) The items within the selected slice of the list.
.RE
.RS 4
.RE
.IP "get_relationships_by_user" 4
.IX Item "get_relationships_by_user"
.Vb 1
\&  my $res = $tp\->users\->get_relationships_by_user($id, $userId);
.Ve
.Sp
Get a list of relationships that the selected user has with a single other user.
.Sp
Returns List<Relationship> which contains following properties.
.RS 4
.IP "totalResults" 8
.IX Item "totalResults"
(integer) The total number of items in the whole list of which this list object is a paginated view.
.IP "entries" 8
.IX Item "entries"
(array<Relationship>) The items within the selected slice of the list.
.RE
.RS 4
.RE
.IP "get_follower_relationships" 4
.IX Item "get_follower_relationships"
.Vb 1
\&  my $res = $tp\->users\->get_follower_relationships($id);
.Ve
.Sp
Get a list of relationships that have the Contact type that the selected user has with other users.
.Sp
Returns List<Relationship> which contains following properties.
.RS 4
.IP "totalResults" 8
.IX Item "totalResults"
(integer) The total number of items in the whole list of which this list object is a paginated view.
.IP "entries" 8
.IX Item "entries"
(array<Relationship>) The items within the selected slice of the list.
.RE
.RS 4
.RE
.IP "get_follower_relationships_by_group" 4
.IX Item "get_follower_relationships_by_group"
.Vb 1
\&  my $res = $tp\->users\->get_follower_relationships_by_group($id, $groupId);
.Ve
.Sp
Get a list of relationships that have the Contact type that the selected user has with other users, constrained to members of a particular group.
.Sp
Returns List<Relationship> which contains following properties.
.RS 4
.IP "totalResults" 8
.IX Item "totalResults"
(integer) The total number of items in the whole list of which this list object is a paginated view.
.IP "entries" 8
.IX Item "entries"
(array<Relationship>) The items within the selected slice of the list.
.RE
.RS 4
.RE
.IP "get_following_relationships" 4
.IX Item "get_following_relationships"
.Vb 1
\&  my $res = $tp\->users\->get_following_relationships($id);
.Ve
.Sp
Get a list of relationships that have the Contact type that other users have with the selected user.
.Sp
Returns List<Relationship> which contains following properties.
.RS 4
.IP "totalResults" 8
.IX Item "totalResults"
(integer) The total number of items in the whole list of which this list object is a paginated view.
.IP "entries" 8
.IX Item "entries"
(array<Relationship>) The items within the selected slice of the list.
.RE
.RS 4
.RE
.IP "get_following_relationships_by_group" 4
.IX Item "get_following_relationships_by_group"
.Vb 1
\&  my $res = $tp\->users\->get_following_relationships_by_group($id, $groupId);
.Ve
.Sp
Get a list of relationships that have the Contact type that other users have with the selected user, constrained to members of a particular group.
.Sp
Returns List<Relationship> which contains following properties.
.RS 4
.IP "totalResults" 8
.IX Item "totalResults"
(integer) The total number of items in the whole list of which this list object is a paginated view.
.IP "entries" 8
.IX Item "entries"
(array<Relationship>) The items within the selected slice of the list.
.RE
.RS 4
.RE
